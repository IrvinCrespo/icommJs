var connection = null;
var connect = require("./connection").connection;

var table = "";
var wheres = [];
var orWheres = [];
var andWheres = [];
var joins = [];


var extras;

build();
function config(tab){
    table = tab
}

function build(){
    connect(function(err,connec){
        console.log("Conected");
        console.log("err",err);
        connection = connec
    })
}

function first(){
    query += " LIMIT 1;";
    console.log("LA QUERYYY: ",query);
    return new Promise((result,reject)=>{
        connect(function(err,connection){
            connection.escape(query);
            connection.query(query,function(err,res){
                connection.release();
                if(err) return reject(err)
                var string= JSON.stringify(res);
                var json =  JSON.parse(string);
                return result(json[0])
            });
        })
        
    })
}

function all(){
    return new Promise((result,reject)=>{
        connection.query(query,function(err,res){
            connect(function(err,connection){
                connection.escape(query);
                connection.query(query,function(err,res){
                    connection.release();
                    if(err) return reject(err)
                    var string= JSON.stringify(res);
                    var json =  JSON.parse(string);
                    return result(json)
                });
            })
        });
    })
}

function select(fields){
    var selectf = "*"
    if(fields)selectf = fields.join();
    query.replace("SELECT","SELECT "+connection.escape(selectf)+" FROM "+table);
}

function where(key,op,val){
    query+=" WHERE "+key+" "+op+" "+val;
    return query;
}

function andWhere(key,op,val){
    var str = connection.escape(key+op+val);
    query+= " AND " + str;

    wheres.push({
        key:key,
        operador:op,
        value:val,
        condition:" AND "
    });
}

function orWhere(s){
    var str = connection.escape(key+op+val);
    query+= " AND " + str;

    wheres.push({
        key:key,
        operador:op,
        value:val,
        condition:" OR "
    });
}

function find(){

}

function top(){

}

function desc(){
    
}

function asc(){

}

function orderBy(field){

}

function hasMany(relation,primary,foreign){

}

function hasOne(relation,primary,foreign){

}

//Manipulating data

function update(){

}

module.exports = {
    find:find,
    first:first,
    all:all,
    update:update,
    where:where,
    andWhere:andWhere,
    orWhere:orWhere,
    select:select,
    orderBy:orderBy,
    top:top,
    asc:asc,
    desc:desc,
    hasMany:hasMany,
    hasOne:hasOne,
    table:table,
    config:config
}